Terminals unused in grammar

   CHAR
   DOUBLE
   CONST_CHAR


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 $@1: %empty

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@1 SEMICOLON

    9 $@2: %empty

   10 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@2 error

   11 $@3: %empty

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@3 compound_statement

   13 parameter_list: parameters
   14               | %empty

   15 parameters: parameters COMMA type_specifier ID
   16           | parameters COMMA type_specifier
   17           | type_specifier ID
   18           | type_specifier

   19 $@4: %empty

   20 compound_statement: LCURL $@4 statements RCURL
   21                   | LCURL RCURL

   22 var_declaration: type_specifier declaration_list SEMICOLON
   23                | type_specifier declaration_list error

   24 type_specifier: INT
   25               | FLOAT
   26               | VOID

   27 declaration_list: declaration_list COMMA ID
   28                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   29                 | ID
   30                 | ID LTHIRD CONST_INT RTHIRD

   31 statements: statement
   32           | statements statement

   33 statement: var_declaration
   34          | expression_statement
   35          | compound_statement
   36          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   37          | IF LPAREN expression RPAREN statement
   38          | IF LPAREN expression RPAREN statement ELSE statement
   39          | WHILE LPAREN expression RPAREN statement
   40          | PRINTLN LPAREN ID RPAREN SEMICOLON
   41          | RETURN expression SEMICOLON
   42          | PRINTLN LPAREN ID RPAREN error
   43          | RETURN expression error

   44 expression_statement: SEMICOLON
   45                     | expression SEMICOLON
   46                     | expression error

   47 variable: ID
   48         | ID LTHIRD expression RTHIRD

   49 expression: logic_expression
   50           | variable ASSIGNOP logic_expression

   51 logic_expression: rel_expression
   52                 | rel_expression LOGICOP rel_expression

   53 rel_expression: simple_expression
   54               | simple_expression RELOP simple_expression

   55 simple_expression: term
   56                  | simple_expression ADDOP term

   57 term: unary_expression
   58     | term MULOP unary_expression

   59 unary_expression: ADDOP unary_expression
   60                 | NOT unary_expression
   61                 | factor

   62 factor: variable
   63       | ID LPAREN argument_list RPAREN
   64       | LPAREN expression RPAREN
   65       | CONST_INT
   66       | CONST_FLOAT
   67       | variable INCOP
   68       | variable DECOP

   69 argument_list: arguments
   70              | %empty

   71 arguments: arguments COMMA logic_expression
   72          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256) 10 23 42 43 46
IF (258) 37 38
FOR (259) 36
WHILE (260) 39
RETURN (261) 41 43
ASSIGNOP (262) 50
NOT (263) 60
PRINTLN (264) 40 42
LPAREN (265) 8 10 12 36 37 38 39 40 42 63 64
RPAREN (266) 8 10 12 36 37 38 39 40 42 63 64
LCURL (267) 20 21
RCURL (268) 20 21
LTHIRD (269) 28 30 48
RTHIRD (270) 28 30 48
COMMA (271) 15 16 27 28 71
SEMICOLON (272) 8 22 40 41 44 45
CONST_INT (273) 28 30 65
INT (274) 24
FLOAT (275) 25
CHAR (276)
VOID (277) 26
DOUBLE (278)
CONST_FLOAT (279) 66
CONST_CHAR (280)
ID (281) 8 10 12 15 17 27 28 29 30 40 42 47 48 63
INCOP (282) 67
DECOP (283) 68
ADDOP (284) 56 59
MULOP (285) 58
RELOP (286) 54
LOGICOP (287) 52
LOWER_THAN_ELSE (288)
ELSE (289) 38


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
start (36)
    on left: 1, on right: 0
program (37)
    on left: 2 3, on right: 1 2
unit (38)
    on left: 4 5 6, on right: 2 3
func_declaration (39)
    on left: 8 10, on right: 5
$@1 (40)
    on left: 7, on right: 8
$@2 (41)
    on left: 9, on right: 10
func_definition (42)
    on left: 12, on right: 6
$@3 (43)
    on left: 11, on right: 12
parameter_list (44)
    on left: 13 14, on right: 8 10 12
parameters (45)
    on left: 15 16 17 18, on right: 13 15 16
compound_statement (46)
    on left: 20 21, on right: 12 35
$@4 (47)
    on left: 19, on right: 20
var_declaration (48)
    on left: 22 23, on right: 4 33
type_specifier (49)
    on left: 24 25 26, on right: 8 10 12 15 16 17 18 22 23
declaration_list (50)
    on left: 27 28 29 30, on right: 22 23 27 28
statements (51)
    on left: 31 32, on right: 20 32
statement (52)
    on left: 33 34 35 36 37 38 39 40 41 42 43, on right: 31 32 36 37
    38 39
expression_statement (53)
    on left: 44 45 46, on right: 34 36
variable (54)
    on left: 47 48, on right: 50 62 67 68
expression (55)
    on left: 49 50, on right: 36 37 38 39 41 43 45 46 48 64
logic_expression (56)
    on left: 51 52, on right: 49 50 71 72
rel_expression (57)
    on left: 53 54, on right: 51 52
simple_expression (58)
    on left: 55 56, on right: 53 54 56
term (59)
    on left: 57 58, on right: 55 56 58
unary_expression (60)
    on left: 59 60 61, on right: 57 58 59 60
factor (61)
    on left: 62 63 64 65 66 67 68, on right: 61
argument_list (62)
    on left: 69 70, on right: 63
arguments (63)
    on left: 71 72, on right: 69 71


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   24 type_specifier: INT .

    $default  reduce using rule 24 (type_specifier)


State 2

   25 type_specifier: FLOAT .

    $default  reduce using rule 25 (type_specifier)


State 3

   26 type_specifier: VOID .

    $default  reduce using rule 26 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    8 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN $@1 SEMICOLON
   10                 | type_specifier . ID LPAREN parameter_list RPAREN $@2 error
   12 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@3 compound_statement
   22 var_declaration: type_specifier . declaration_list SEMICOLON
   23                | type_specifier . declaration_list error

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    8 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN $@1 SEMICOLON
   10                 | type_specifier ID . LPAREN parameter_list RPAREN $@2 error
   12 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@3 compound_statement
   29 declaration_list: ID .
   30                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 29 (declaration_list)


State 14

   22 var_declaration: type_specifier declaration_list . SEMICOLON
   23                | type_specifier declaration_list . error
   27 declaration_list: declaration_list . COMMA ID
   28                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    error      shift, and go to state 17
    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 15

    8 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN $@1 SEMICOLON
   10                 | type_specifier ID LPAREN . parameter_list RPAREN $@2 error
   12 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@3 compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 14 (parameter_list)

    parameter_list  go to state 20
    parameters      go to state 21
    type_specifier  go to state 22


State 16

   30 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 23


State 17

   23 var_declaration: type_specifier declaration_list error .

    $default  reduce using rule 23 (var_declaration)


State 18

   27 declaration_list: declaration_list COMMA . ID
   28                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 24


State 19

   22 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 22 (var_declaration)


State 20

    8 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN $@1 SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list . RPAREN $@2 error
   12 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@3 compound_statement

    RPAREN  shift, and go to state 25


State 21

   13 parameter_list: parameters .
   15 parameters: parameters . COMMA type_specifier ID
   16           | parameters . COMMA type_specifier

    COMMA  shift, and go to state 26

    $default  reduce using rule 13 (parameter_list)


State 22

   17 parameters: type_specifier . ID
   18           | type_specifier .

    ID  shift, and go to state 27

    $default  reduce using rule 18 (parameters)


State 23

   30 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 28


State 24

   27 declaration_list: declaration_list COMMA ID .
   28                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 29

    $default  reduce using rule 27 (declaration_list)


State 25

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . $@1 SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list RPAREN . $@2 error
   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@3 compound_statement

    error     reduce using rule 9 ($@2)
    LCURL     reduce using rule 11 ($@3)
    $default  reduce using rule 7 ($@1)

    $@1  go to state 30
    $@2  go to state 31
    $@3  go to state 32


State 26

   15 parameters: parameters COMMA . type_specifier ID
   16           | parameters COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 33


State 27

   17 parameters: type_specifier ID .

    $default  reduce using rule 17 (parameters)


State 28

   30 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 30 (declaration_list)


State 29

   28 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 34


State 30

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@1 . SEMICOLON

    SEMICOLON  shift, and go to state 35


State 31

   10 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@2 . error

    error  shift, and go to state 36


State 32

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@3 . compound_statement

    LCURL  shift, and go to state 37

    compound_statement  go to state 38


State 33

   15 parameters: parameters COMMA type_specifier . ID
   16           | parameters COMMA type_specifier .

    ID  shift, and go to state 39

    $default  reduce using rule 16 (parameters)


State 34

   28 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 40


State 35

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@1 SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 36

   10 func_declaration: type_specifier ID LPAREN parameter_list RPAREN $@2 error .

    $default  reduce using rule 10 (func_declaration)


State 37

   20 compound_statement: LCURL . $@4 statements RCURL
   21                   | LCURL . RCURL

    RCURL  shift, and go to state 41

    $default  reduce using rule 19 ($@4)

    $@4  go to state 42


State 38

   12 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@3 compound_statement .

    $default  reduce using rule 12 (func_definition)


State 39

   15 parameters: parameters COMMA type_specifier ID .

    $default  reduce using rule 15 (parameters)


State 40

   28 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 28 (declaration_list)


State 41

   21 compound_statement: LCURL RCURL .

    $default  reduce using rule 21 (compound_statement)


State 42

   20 compound_statement: LCURL $@4 . statements RCURL

    IF           shift, and go to state 43
    FOR          shift, and go to state 44
    WHILE        shift, and go to state 45
    RETURN       shift, and go to state 46
    NOT          shift, and go to state 47
    PRINTLN      shift, and go to state 48
    LPAREN       shift, and go to state 49
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statements            go to state 58
    statement             go to state 59
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 43

   37 statement: IF . LPAREN expression RPAREN statement
   38          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 69


State 44

   36 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 70


State 45

   39 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 71


State 46

   41 statement: RETURN . expression SEMICOLON
   43          | RETURN . expression error

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 61
    expression         go to state 72
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 47

   60 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable          go to state 73
    unary_expression  go to state 74
    factor            go to state 68


State 48

   40 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON
   42          | PRINTLN . LPAREN ID RPAREN error

    LPAREN  shift, and go to state 75


State 49

   64 factor: LPAREN . expression RPAREN

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 61
    expression         go to state 76
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 50

   44 expression_statement: SEMICOLON .

    $default  reduce using rule 44 (expression_statement)


State 51

   65 factor: CONST_INT .

    $default  reduce using rule 65 (factor)


State 52

   66 factor: CONST_FLOAT .

    $default  reduce using rule 66 (factor)


State 53

   47 variable: ID .
   48         | ID . LTHIRD expression RTHIRD
   63 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 77
    LTHIRD  shift, and go to state 78

    $default  reduce using rule 47 (variable)


State 54

   59 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable          go to state 73
    unary_expression  go to state 79
    factor            go to state 68


State 55

   35 statement: compound_statement .

    $default  reduce using rule 35 (statement)


State 56

   33 statement: var_declaration .

    $default  reduce using rule 33 (statement)


State 57

   22 var_declaration: type_specifier . declaration_list SEMICOLON
   23                | type_specifier . declaration_list error

    ID  shift, and go to state 80

    declaration_list  go to state 14


State 58

   20 compound_statement: LCURL $@4 statements . RCURL
   32 statements: statements . statement

    IF           shift, and go to state 43
    FOR          shift, and go to state 44
    WHILE        shift, and go to state 45
    RETURN       shift, and go to state 46
    NOT          shift, and go to state 47
    PRINTLN      shift, and go to state 48
    LPAREN       shift, and go to state 49
    LCURL        shift, and go to state 37
    RCURL        shift, and go to state 81
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 82
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 59

   31 statements: statement .

    $default  reduce using rule 31 (statements)


State 60

   34 statement: expression_statement .

    $default  reduce using rule 34 (statement)


State 61

   50 expression: variable . ASSIGNOP logic_expression
   62 factor: variable .
   67       | variable . INCOP
   68       | variable . DECOP

    ASSIGNOP  shift, and go to state 83
    INCOP     shift, and go to state 84
    DECOP     shift, and go to state 85

    $default  reduce using rule 62 (factor)


State 62

   45 expression_statement: expression . SEMICOLON
   46                     | expression . error

    error      shift, and go to state 86
    SEMICOLON  shift, and go to state 87


State 63

   49 expression: logic_expression .

    $default  reduce using rule 49 (expression)


State 64

   51 logic_expression: rel_expression .
   52                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 88

    $default  reduce using rule 51 (logic_expression)


State 65

   53 rel_expression: simple_expression .
   54               | simple_expression . RELOP simple_expression
   56 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 89
    RELOP  shift, and go to state 90

    $default  reduce using rule 53 (rel_expression)


State 66

   55 simple_expression: term .
   58 term: term . MULOP unary_expression

    MULOP  shift, and go to state 91

    $default  reduce using rule 55 (simple_expression)


State 67

   57 term: unary_expression .

    $default  reduce using rule 57 (term)


State 68

   61 unary_expression: factor .

    $default  reduce using rule 61 (unary_expression)


State 69

   37 statement: IF LPAREN . expression RPAREN statement
   38          | IF LPAREN . expression RPAREN statement ELSE statement

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 61
    expression         go to state 92
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 70

   36 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    expression_statement  go to state 93
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 71

   39 statement: WHILE LPAREN . expression RPAREN statement

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 61
    expression         go to state 94
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 72

   41 statement: RETURN expression . SEMICOLON
   43          | RETURN expression . error

    error      shift, and go to state 95
    SEMICOLON  shift, and go to state 96


State 73

   62 factor: variable .
   67       | variable . INCOP
   68       | variable . DECOP

    INCOP  shift, and go to state 84
    DECOP  shift, and go to state 85

    $default  reduce using rule 62 (factor)


State 74

   60 unary_expression: NOT unary_expression .

    $default  reduce using rule 60 (unary_expression)


State 75

   40 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON
   42          | PRINTLN LPAREN . ID RPAREN error

    ID  shift, and go to state 97


State 76

   64 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 98


State 77

   63 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    $default  reduce using rule 70 (argument_list)

    variable           go to state 73
    logic_expression   go to state 99
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68
    argument_list      go to state 100
    arguments          go to state 101


State 78

   48 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 61
    expression         go to state 102
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 79

   59 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 59 (unary_expression)


State 80

   29 declaration_list: ID .
   30                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 29 (declaration_list)


State 81

   20 compound_statement: LCURL $@4 statements RCURL .

    $default  reduce using rule 20 (compound_statement)


State 82

   32 statements: statements statement .

    $default  reduce using rule 32 (statements)


State 83

   50 expression: variable ASSIGNOP . logic_expression

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 73
    logic_expression   go to state 103
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 84

   67 factor: variable INCOP .

    $default  reduce using rule 67 (factor)


State 85

   68 factor: variable DECOP .

    $default  reduce using rule 68 (factor)


State 86

   46 expression_statement: expression error .

    $default  reduce using rule 46 (expression_statement)


State 87

   45 expression_statement: expression SEMICOLON .

    $default  reduce using rule 45 (expression_statement)


State 88

   52 logic_expression: rel_expression LOGICOP . rel_expression

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 73
    rel_expression     go to state 104
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 89

   56 simple_expression: simple_expression ADDOP . term

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable          go to state 73
    term              go to state 105
    unary_expression  go to state 67
    factor            go to state 68


State 90

   54 rel_expression: simple_expression RELOP . simple_expression

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 73
    simple_expression  go to state 106
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 91

   58 term: term MULOP . unary_expression

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable          go to state 73
    unary_expression  go to state 107
    factor            go to state 68


State 92

   37 statement: IF LPAREN expression . RPAREN statement
   38          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 108


State 93

   36 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    expression_statement  go to state 109
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 94

   39 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 110


State 95

   43 statement: RETURN expression error .

    $default  reduce using rule 43 (statement)


State 96

   41 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 41 (statement)


State 97

   40 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON
   42          | PRINTLN LPAREN ID . RPAREN error

    RPAREN  shift, and go to state 111


State 98

   64 factor: LPAREN expression RPAREN .

    $default  reduce using rule 64 (factor)


State 99

   72 arguments: logic_expression .

    $default  reduce using rule 72 (arguments)


State 100

   63 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 112


State 101

   69 argument_list: arguments .
   71 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 113

    $default  reduce using rule 69 (argument_list)


State 102

   48 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 114


State 103

   50 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 50 (expression)


State 104

   52 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 52 (logic_expression)


State 105

   56 simple_expression: simple_expression ADDOP term .
   58 term: term . MULOP unary_expression

    MULOP  shift, and go to state 91

    $default  reduce using rule 56 (simple_expression)


State 106

   54 rel_expression: simple_expression RELOP simple_expression .
   56 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 89

    $default  reduce using rule 54 (rel_expression)


State 107

   58 term: term MULOP unary_expression .

    $default  reduce using rule 58 (term)


State 108

   37 statement: IF LPAREN expression RPAREN . statement
   38          | IF LPAREN expression RPAREN . statement ELSE statement

    IF           shift, and go to state 43
    FOR          shift, and go to state 44
    WHILE        shift, and go to state 45
    RETURN       shift, and go to state 46
    NOT          shift, and go to state 47
    PRINTLN      shift, and go to state 48
    LPAREN       shift, and go to state 49
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 115
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 109

   36 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 61
    expression         go to state 116
    logic_expression   go to state 63
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 110

   39 statement: WHILE LPAREN expression RPAREN . statement

    IF           shift, and go to state 43
    FOR          shift, and go to state 44
    WHILE        shift, and go to state 45
    RETURN       shift, and go to state 46
    NOT          shift, and go to state 47
    PRINTLN      shift, and go to state 48
    LPAREN       shift, and go to state 49
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 117
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 111

   40 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON
   42          | PRINTLN LPAREN ID RPAREN . error

    error      shift, and go to state 118
    SEMICOLON  shift, and go to state 119


State 112

   63 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 63 (factor)


State 113

   71 arguments: arguments COMMA . logic_expression

    NOT          shift, and go to state 47
    LPAREN       shift, and go to state 49
    CONST_INT    shift, and go to state 51
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    variable           go to state 73
    logic_expression   go to state 120
    rel_expression     go to state 64
    simple_expression  go to state 65
    term               go to state 66
    unary_expression   go to state 67
    factor             go to state 68


State 114

   48 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 48 (variable)


State 115

   37 statement: IF LPAREN expression RPAREN statement .
   38          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 121

    $default  reduce using rule 37 (statement)


State 116

   36 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 122


State 117

   39 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 39 (statement)


State 118

   42 statement: PRINTLN LPAREN ID RPAREN error .

    $default  reduce using rule 42 (statement)


State 119

   40 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 40 (statement)


State 120

   71 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 71 (arguments)


State 121

   38 statement: IF LPAREN expression RPAREN statement ELSE . statement

    IF           shift, and go to state 43
    FOR          shift, and go to state 44
    WHILE        shift, and go to state 45
    RETURN       shift, and go to state 46
    NOT          shift, and go to state 47
    PRINTLN      shift, and go to state 48
    LPAREN       shift, and go to state 49
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 123
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 122

   36 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    IF           shift, and go to state 43
    FOR          shift, and go to state 44
    WHILE        shift, and go to state 45
    RETURN       shift, and go to state 46
    NOT          shift, and go to state 47
    PRINTLN      shift, and go to state 48
    LPAREN       shift, and go to state 49
    LCURL        shift, and go to state 37
    SEMICOLON    shift, and go to state 50
    CONST_INT    shift, and go to state 51
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    CONST_FLOAT  shift, and go to state 52
    ID           shift, and go to state 53
    ADDOP        shift, and go to state 54

    compound_statement    go to state 55
    var_declaration       go to state 56
    type_specifier        go to state 57
    statement             go to state 124
    expression_statement  go to state 60
    variable              go to state 61
    expression            go to state 62
    logic_expression      go to state 63
    rel_expression        go to state 64
    simple_expression     go to state 65
    term                  go to state 66
    unary_expression      go to state 67
    factor                go to state 68


State 123

   38 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 38 (statement)


State 124

   36 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 36 (statement)
