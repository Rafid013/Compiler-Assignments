.MODEL SMALL


.STACK 100H


.DATA
@t0 DW ?
@t1 DW ?
@t2 DW ?
@t3 DW ?
@t4 DW ?
a2 DW ?
x3 DW ?
@t5 DW ?
@t6 DW ?
@t7 DW ?
a3 DW ?
b3 DW ?
a4 DW ?
b4 DW ?
@t8 DW ?
@t9 DW ?
@t10 DW ?
@t11 DW ?



.CODE
MOV AX, @DATA
MOV DS, AX
f PROC
PUSH a2
PUSH BP
MOV BP, SP
MOV AX, [BP+6]
MOV a2, AX
MOV @t0, 3
PUSH @t0
CALL f
MOV @t1, CX
MOV @t2, 2
MOV AX, @t2
IMUL a2
MOV @t3, AX
MOV CX, @t3
POP BP
POP a2
RET 2
MOV @t4, 9
MOV AX, @t4
MOV a2, AX
f ENDP
g PROC
PUSH a3
PUSH b3
PUSH BP
MOV BP, SP
MOV AX, [BP+10]
MOV a3, AX
MOV AX, [BP+8]
MOV b3, AX
PUSH a3
CALL f
MOV @t5, CX
MOV AX, @t5
ADD AX, a3
MOV @t6, AX
ADD AX, b3
MOV @t7, AX
MOV x3, AX
MOV CX, x3
POP BP
POP a3
POP b3
RET 4
g ENDP
MAIN PROC
MOV @t8, 1
MOV AX, @t8
MOV a4, AX
MOV @t9, 2
MOV AX, @t9
MOV b4, AX
PUSH a4
CALL f
MOV @t10, CX
MOV AX, @t10
MOV a4, AX
CALL OUTDEC
MOV @t11, 0
MOV AH, 4CH
INT 21H
MAIN ENDP
OUTDEC PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
OR AX, AX
JGE @END_IF1
PUSH AX
MOV DL, '-'
MOV AH, 2
INT 21H
POP AX
NEG AX
@END_IF1:
XOR CX, CX
MOV BX, 10
@REPEAT1:
XOR DX, DX
DIV BX
PUSH DX
INC CX
OR AX, AX
JNE @REPEAT1
MOV AH, 2
@PRINT_LOOP:
POP DX
OR DL, 30H
INT 21H
LOOP @PRINT_LOOP
MOV AH, 2
MOV DL, 0DH
INT 21H
MOV DL, 0AH
INT 21H
POP DX
POP CX
POP BX
POP AX
RET
OUTDEC ENDP
END MAIN




